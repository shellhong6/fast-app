<!-- 本组件监听的事件：
  toSearchResulting: 进入搜索结果
  toNotSearchResulting: 退出搜索结果
-->
<template>
  <div class="search-result-view-container {{toSearchResultingCls}}">
    <block if='resultList && resultList.length'>
      <list>
        <list-item class='search-result-view-line search-result-view-line{{index}}' type='result-line' for='{{(index,item) in resultList}}' onclick='handleClick(item.title)'>
          <image class="result-icon" src="{{item.cover}}" alt=""></image>
          <div class="result-right-field">
            <text class='result-title'>{{item.title}}</text>
            <text class='result-owner'>{{item.owner}}</text>
          </div>
        </list-item>
      </list>
    </block>
  </div>
</template>

<style lang="less">
  .search-result-view-container{
    display: none;
    flex-direction: column;
    flex-grow: 1;
    width: 100%;
    height: 100%;
    padding-top: 142px;
    position: fixed;
    padding-left: 48px;
    padding-right: 48px;
    background-color: #ffffff;
  }
  list{
    height: 100%;
  }
  .search-result-view-line{
    flex-direction: row;
    flex-grow: 1;
    flex-shrink: 0;
    height: 328px;
    align-items: center;
    image{
      height: 238px;
      width: 166px;
      margin-right: 51px;
      flex-shrink: 0;
    }
  }
  .search-result-view-line0{
    .result-right-field{
      border-top-width: 0px;
    }
  }
  .result-right-field{
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    border-color: #e5e5e5;
    border-style: solid;
    border-top-width: 1px;
    flex-grow: 1;
    flex-shrink: 0;
    height: 100%;
  }
  .result-title{
    color: #000000;
    font-size: 48px;
    margin-bottom: 22px;
  }
  .result-owner{
    color: #cfcfcf;
    font-size: 32px;
  }
  .resulting{
    display: flex;
  }
</style>

<script>
  import prompt from '@system.prompt'
  import fetch from '@system.fetch'
  import result from '../Common/data/result.js'

  export default {
    data() {
      return {
        toSearchResultingCls: '',
        resultList: result.value.ebook.items
      }
    },
    onInit() {
      this.$on('toSearchResulting', this.toSearchResulting.bind(this));
      this.$on('toNotSearchResulting', this.toNotSearchResulting.bind(this));
    },
    handleClick(word) {
      prompt.showToast({
        message: word
      });
    },
    toSearchResulting(e) {
      this.$dispatch('setSearchInputValue1', {value: e.detail.word, notEmitChange: true});
      prompt.showToast({
        message: e.detail.word
      });
      this.toSearchResultingCls = 'resulting';
    },
    toNotSearchResulting() {
      this.toSearchResultingCls = '';
    }
  }
</script>
